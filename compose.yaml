services:
  postgres:
    image: postgres:17
    container_name: postgress
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: agent_platform
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - container-network

  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    volumes:
      - ./data/mailpit:/data
    environment:
      TZ: Asia/Tokyo
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
      MP_SMTP_FORWARD_TO: forward@mailpit.com
      MP_SMTP_FORWARD_HOST: webhook-receiver
      MP_SMTP_FORWARD_PORT: 2500
    networks:
      - container-network

  elasticmq:
    image: softwaremill/elasticmq-native:latest
    container_name: event-queue
    ports:
      - "9324:9324"
      - "9325:9325"
    volumes:
      - ./elasticmq.conf:/opt/elasticmq.conf
    networks:
      - container-network

  webhook-receiver:
    build:
      context: ./app/
      dockerfile: Dockerfile
    container_name: webhook-receiver
    command: ["/server", "webhookReceiver"] 
    environment:
      SQS_ENDPOINT: http://event-queue:9324
      AWS_REGION: ap-northeast-1
      AWS_SECRET_ACCESS_KEY: dummy
      AWS_ACCESS_KEY_ID: dummy
      WEBHOOK_RECEIVER_ADDR: ":3008"
    ports:
      - "2500:2500"
      - "3008:3008"
    networks:
      - container-network
    depends_on:
      - elasticmq

volumes:
  postgres_data:

networks:
  container-network:
    driver: bridge
